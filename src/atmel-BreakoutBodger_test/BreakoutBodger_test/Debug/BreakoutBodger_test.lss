
BreakoutBodger_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800100  000009ee  00000a82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800148  00800148  00000aca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000aca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c26  00000000  00000000  00000bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000928  00000000  00000000  0000181e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005a9  00000000  00000000  00002146  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  000026f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055d  00000000  00000000  00002820  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000263  00000000  00000000  00002d7d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002fe0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 57 01 	jmp	0x2ae	; 0x2ae <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ee       	ldi	r30, 0xEE	; 238
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 34       	cpi	r26, 0x48	; 72
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e4       	ldi	r26, 0x48	; 72
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 36       	cpi	r26, 0x60	; 96
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <main>
  9e:	0c 94 f5 04 	jmp	0x9ea	; 0x9ea <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
		return(0);
	}
}

int uart_putchar(char c, FILE *stream)
{
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n')
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
	{
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	while (!(UCSR0A & (1<<UDRE0))); //waits between transmissions
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c; //Sends the UART transmission
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <usart_init>:
FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

void usart_init(uint32_t fcpu, uint32_t BAUDRATE)
{
	
	UBRR0 = fcpu/16/BAUDRATE-1; //Sets the Baudrate
  ca:	68 94       	set
  cc:	13 f8       	bld	r1, 3
  ce:	96 95       	lsr	r25
  d0:	87 95       	ror	r24
  d2:	77 95       	ror	r23
  d4:	67 95       	ror	r22
  d6:	16 94       	lsr	r1
  d8:	d1 f7       	brne	.-12     	; 0xce <usart_init+0x4>
  da:	0e 94 c5 01 	call	0x38a	; 0x38a <__udivmodsi4>
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	31 09       	sbc	r19, r1
  e2:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
  e6:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0); //Enables input and output
  ea:	88 e1       	ldi	r24, 0x18	; 24
  ec:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (3<<UCSZ00); 	//Set communication as 8bit(And 1 stop bit is default.)
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
		
	stdout = &uart_output;
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <__iob+0x3>
  fe:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <__iob+0x2>

	//Test

	puts(" \n--------------- ");
 102:	8e e0       	ldi	r24, 0x0E	; 14
 104:	91 e0       	ldi	r25, 0x01	; 1
 106:	0e 94 fd 01 	call	0x3fa	; 0x3fa <puts>
	printf("Printf over Uart is enabled!\n");
 10a:	81 e2       	ldi	r24, 0x21	; 33
 10c:	91 e0       	ldi	r25, 0x01	; 1
 10e:	0e 94 fd 01 	call	0x3fa	; 0x3fa <puts>
	puts("--------------- ");
 112:	80 e1       	ldi	r24, 0x10	; 16
 114:	91 e0       	ldi	r25, 0x01	; 1
 116:	0e 94 fd 01 	call	0x3fa	; 0x3fa <puts>
 11a:	08 95       	ret

0000011c <initialize>:
void task1(void)
{

}
void task2(void)
{
 11c:	20 e8       	ldi	r18, 0x80	; 128
 11e:	35 e2       	ldi	r19, 0x25	; 37
 120:	40 e0       	ldi	r20, 0x00	; 0
 122:	50 e0       	ldi	r21, 0x00	; 0
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	74 e2       	ldi	r23, 0x24	; 36
 128:	84 ef       	ldi	r24, 0xF4	; 244
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 65 00 	call	0xca	; 0xca <usart_init>
 130:	57 9a       	sbi	0x0a, 7	; 10
 132:	82 e0       	ldi	r24, 0x02	; 2
 134:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
 138:	99 ef       	ldi	r25, 0xF9	; 249
 13a:	97 bd       	out	0x27, r25	; 39
 13c:	84 bd       	out	0x24, r24	; 36
 13e:	83 e0       	ldi	r24, 0x03	; 3
 140:	85 bd       	out	0x25, r24	; 37
 142:	88 ee       	ldi	r24, 0xE8	; 232
 144:	93 e0       	ldi	r25, 0x03	; 3
 146:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <stop_watch_counter+0x1>
 14a:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <stop_watch_counter>
 14e:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <stop_watch_overflow_counter+0x1>
 152:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <stop_watch_overflow_counter>
 156:	24 ef       	ldi	r18, 0xF4	; 244
 158:	31 e0       	ldi	r19, 0x01	; 1
 15a:	30 93 55 01 	sts	0x0155, r19	; 0x800155 <t2_counter+0x1>
 15e:	20 93 54 01 	sts	0x0154, r18	; 0x800154 <t2_counter>
 162:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <time3+0x1>
 166:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <time3>
 16a:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <stop_watch_running+0x1>
 16e:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <stop_watch_running>
 172:	78 94       	sei
 174:	08 95       	ret

00000176 <task3>:

}
void task3(void)
{
	BB_INBUILT_LED_PORT ^= BB_INBUILT_LED_bm;	
 176:	8b b1       	in	r24, 0x0b	; 11
 178:	80 58       	subi	r24, 0x80	; 128
 17a:	8b b9       	out	0x0b, r24	; 11
 17c:	08 95       	ret

0000017e <timeread>:
}
void timeread(void)
{
	if (stop_watch_overflow_counter > 0)
 17e:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <stop_watch_overflow_counter>
 182:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <stop_watch_overflow_counter+0x1>
 186:	89 2b       	or	r24, r25
 188:	e1 f0       	breq	.+56     	; 0x1c2 <timeread+0x44>
	{
		uint16_t time_dump = stop_watch_overflow_counter;
 18a:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <stop_watch_overflow_counter>
 18e:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <stop_watch_overflow_counter+0x1>
		stop_watch_overflow_counter = 0;
 192:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <stop_watch_overflow_counter+0x1>
 196:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <stop_watch_overflow_counter>
		stop_watch_ms += time_dump;
 19a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <__data_end>
 19e:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <__data_end+0x1>
 1a2:	a0 91 4a 01 	lds	r26, 0x014A	; 0x80014a <__data_end+0x2>
 1a6:	b0 91 4b 01 	lds	r27, 0x014B	; 0x80014b <__data_end+0x3>
 1aa:	82 0f       	add	r24, r18
 1ac:	93 1f       	adc	r25, r19
 1ae:	a1 1d       	adc	r26, r1
 1b0:	b1 1d       	adc	r27, r1
 1b2:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <__data_end>
 1b6:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <__data_end+0x1>
 1ba:	a0 93 4a 01 	sts	0x014A, r26	; 0x80014a <__data_end+0x2>
 1be:	b0 93 4b 01 	sts	0x014B, r27	; 0x80014b <__data_end+0x3>
	}
	
	if (t2_overflow_counter>0)
 1c2:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <t2_overflow_counter>
 1c6:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <t2_overflow_counter+0x1>
 1ca:	89 2b       	or	r24, r25
 1cc:	21 f0       	breq	.+8      	; 0x1d6 <timeread+0x58>
	{
		t2_overflow_counter = 0;
 1ce:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <t2_overflow_counter+0x1>
 1d2:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <t2_overflow_counter>
		task2();
	}
	if (0 == time3)
 1d6:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <time3>
 1da:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <time3+0x1>
 1de:	89 2b       	or	r24, r25
 1e0:	41 f4       	brne	.+16     	; 0x1f2 <timeread+0x74>
	{
		
		time3=t3;
 1e2:	88 ee       	ldi	r24, 0xE8	; 232
 1e4:	93 e0       	ldi	r25, 0x03	; 3
 1e6:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <time3+0x1>
 1ea:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <time3>
		task3();
 1ee:	0e 94 bb 00 	call	0x176	; 0x176 <task3>
	}
	if (!(PIND & BB_INBUILT_BUTTON_bm))
 1f2:	4e 99       	sbic	0x09, 6	; 9
 1f4:	1d c0       	rjmp	.+58     	; 0x230 <timeread+0xb2>
	{
		stop_watch_running = TRUE;
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <stop_watch_running+0x1>
 1fe:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <stop_watch_running>
		if (!(button_1_flag))
 202:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <button_1_flag>
 206:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <button_1_flag+0x1>
 20a:	89 2b       	or	r24, r25
 20c:	09 f0       	breq	.+2      	; 0x210 <timeread+0x92>
 20e:	49 c0       	rjmp	.+146    	; 0x2a2 <timeread+0x124>
		{
			button_1_flag = TRUE;
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <button_1_flag+0x1>
 218:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <button_1_flag>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	81 ee       	ldi	r24, 0xE1	; 225
 220:	94 e0       	ldi	r25, 0x04	; 4
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <timeread+0xa4>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <timeread+0xae>
 22c:	00 00       	nop
 22e:	08 95       	ret
			_delay_ms(100);
		}
	}
	else if ((button_1_flag == TRUE) && (BB_INBUILT_BUTTON_status==FALSE))
 230:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <button_1_flag>
 234:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <button_1_flag+0x1>
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	39 f5       	brne	.+78     	; 0x28a <timeread+0x10c>
 23c:	4e 9b       	sbis	0x09, 6	; 9
 23e:	25 c0       	rjmp	.+74     	; 0x28a <timeread+0x10c>
	{
		button_1_flag = FALSE;
 240:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <button_1_flag+0x1>
 244:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <button_1_flag>
		printf("ms: %lu \n", stop_watch_ms);
 248:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <__data_end+0x3>
 24c:	8f 93       	push	r24
 24e:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <__data_end+0x2>
 252:	8f 93       	push	r24
 254:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <__data_end+0x1>
 258:	8f 93       	push	r24
 25a:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <__data_end>
 25e:	8f 93       	push	r24
 260:	8e e3       	ldi	r24, 0x3E	; 62
 262:	91 e0       	ldi	r25, 0x01	; 1
 264:	9f 93       	push	r25
 266:	8f 93       	push	r24
 268:	0e 94 e7 01 	call	0x3ce	; 0x3ce <printf>
		stop_watch_ms = 0;
 26c:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__data_end>
 270:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__data_end+0x1>
 274:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <__data_end+0x2>
 278:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <__data_end+0x3>
 27c:	0f 90       	pop	r0
 27e:	0f 90       	pop	r0
 280:	0f 90       	pop	r0
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	0f 90       	pop	r0
 288:	08 95       	ret
	}
	else
	{
		button_1_flag = FALSE;
 28a:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <button_1_flag+0x1>
 28e:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <button_1_flag>
		stop_watch_ms = 0;
 292:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <__data_end>
 296:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <__data_end+0x1>
 29a:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <__data_end+0x2>
 29e:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <__data_end+0x3>
 2a2:	08 95       	ret

000002a4 <main>:
	}
}
int main(void)
{

	initialize();
 2a4:	0e 94 8e 00 	call	0x11c	; 0x11c <initialize>
    /* Replace with your application code */
    while (1) 
    {
		timeread();
 2a8:	0e 94 bf 00 	call	0x17e	; 0x17e <timeread>
 2ac:	fd cf       	rjmp	.-6      	; 0x2a8 <main+0x4>

000002ae <__vector_14>:

	return(0);
}

ISR(TIMER0_COMPA_vect)
{
 2ae:	1f 92       	push	r1
 2b0:	0f 92       	push	r0
 2b2:	0f b6       	in	r0, 0x3f	; 63
 2b4:	0f 92       	push	r0
 2b6:	11 24       	eor	r1, r1
 2b8:	8f 93       	push	r24
 2ba:	9f 93       	push	r25
	if ((stop_watch_counter>0) && (stop_watch_running == TRUE))
 2bc:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <stop_watch_counter>
 2c0:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <stop_watch_counter+0x1>
 2c4:	89 2b       	or	r24, r25
 2c6:	81 f0       	breq	.+32     	; 0x2e8 <__vector_14+0x3a>
 2c8:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <stop_watch_running>
 2cc:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <stop_watch_running+0x1>
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	51 f4       	brne	.+20     	; 0x2e8 <__vector_14+0x3a>
	{
		stop_watch_counter--;
 2d4:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <stop_watch_counter>
 2d8:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <stop_watch_counter+0x1>
 2dc:	01 97       	sbiw	r24, 0x01	; 1
 2de:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <stop_watch_counter+0x1>
 2e2:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <stop_watch_counter>
 2e6:	20 c0       	rjmp	.+64     	; 0x328 <__vector_14+0x7a>
	}
	else if (stop_watch_counter==0)
 2e8:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <stop_watch_counter>
 2ec:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <stop_watch_counter+0x1>
 2f0:	89 2b       	or	r24, r25
 2f2:	81 f4       	brne	.+32     	; 0x314 <__vector_14+0x66>
	{
		stop_watch_counter = t1;
 2f4:	88 ee       	ldi	r24, 0xE8	; 232
 2f6:	93 e0       	ldi	r25, 0x03	; 3
 2f8:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <stop_watch_counter+0x1>
 2fc:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <stop_watch_counter>
		stop_watch_overflow_counter++;
 300:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <stop_watch_overflow_counter>
 304:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <stop_watch_overflow_counter+0x1>
 308:	01 96       	adiw	r24, 0x01	; 1
 30a:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <stop_watch_overflow_counter+0x1>
 30e:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <stop_watch_overflow_counter>
 312:	0a c0       	rjmp	.+20     	; 0x328 <__vector_14+0x7a>
	}
	else
	{
		stop_watch_counter = t1;
 314:	88 ee       	ldi	r24, 0xE8	; 232
 316:	93 e0       	ldi	r25, 0x03	; 3
 318:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <stop_watch_counter+0x1>
 31c:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <stop_watch_counter>
		stop_watch_overflow_counter = 0;
 320:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <stop_watch_overflow_counter+0x1>
 324:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <stop_watch_overflow_counter>
	}
	if (t2_counter>0)
 328:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <t2_counter>
 32c:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <t2_counter+0x1>
 330:	89 2b       	or	r24, r25
 332:	51 f0       	breq	.+20     	; 0x348 <__vector_14+0x9a>
	{
		t2_counter--;
 334:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <t2_counter>
 338:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <t2_counter+0x1>
 33c:	01 97       	sbiw	r24, 0x01	; 1
 33e:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <t2_counter+0x1>
 342:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <t2_counter>
 346:	0f c0       	rjmp	.+30     	; 0x366 <__vector_14+0xb8>
	}
	else
	{
		t2_counter = t2;
 348:	84 ef       	ldi	r24, 0xF4	; 244
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <t2_counter+0x1>
 350:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <t2_counter>
		t2_overflow_counter++;
 354:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <t2_overflow_counter>
 358:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <t2_overflow_counter+0x1>
 35c:	01 96       	adiw	r24, 0x01	; 1
 35e:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <t2_overflow_counter+0x1>
 362:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <t2_overflow_counter>
	}
	if (time3>0)
 366:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <time3>
 36a:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <time3+0x1>
 36e:	00 97       	sbiw	r24, 0x00	; 0
 370:	29 f0       	breq	.+10     	; 0x37c <__vector_14+0xce>
	{
		time3--;
 372:	01 97       	sbiw	r24, 0x01	; 1
 374:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <time3+0x1>
 378:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <time3>
	}
		
 37c:	9f 91       	pop	r25
 37e:	8f 91       	pop	r24
 380:	0f 90       	pop	r0
 382:	0f be       	out	0x3f, r0	; 63
 384:	0f 90       	pop	r0
 386:	1f 90       	pop	r1
 388:	18 95       	reti

0000038a <__udivmodsi4>:
 38a:	a1 e2       	ldi	r26, 0x21	; 33
 38c:	1a 2e       	mov	r1, r26
 38e:	aa 1b       	sub	r26, r26
 390:	bb 1b       	sub	r27, r27
 392:	fd 01       	movw	r30, r26
 394:	0d c0       	rjmp	.+26     	; 0x3b0 <__udivmodsi4_ep>

00000396 <__udivmodsi4_loop>:
 396:	aa 1f       	adc	r26, r26
 398:	bb 1f       	adc	r27, r27
 39a:	ee 1f       	adc	r30, r30
 39c:	ff 1f       	adc	r31, r31
 39e:	a2 17       	cp	r26, r18
 3a0:	b3 07       	cpc	r27, r19
 3a2:	e4 07       	cpc	r30, r20
 3a4:	f5 07       	cpc	r31, r21
 3a6:	20 f0       	brcs	.+8      	; 0x3b0 <__udivmodsi4_ep>
 3a8:	a2 1b       	sub	r26, r18
 3aa:	b3 0b       	sbc	r27, r19
 3ac:	e4 0b       	sbc	r30, r20
 3ae:	f5 0b       	sbc	r31, r21

000003b0 <__udivmodsi4_ep>:
 3b0:	66 1f       	adc	r22, r22
 3b2:	77 1f       	adc	r23, r23
 3b4:	88 1f       	adc	r24, r24
 3b6:	99 1f       	adc	r25, r25
 3b8:	1a 94       	dec	r1
 3ba:	69 f7       	brne	.-38     	; 0x396 <__udivmodsi4_loop>
 3bc:	60 95       	com	r22
 3be:	70 95       	com	r23
 3c0:	80 95       	com	r24
 3c2:	90 95       	com	r25
 3c4:	9b 01       	movw	r18, r22
 3c6:	ac 01       	movw	r20, r24
 3c8:	bd 01       	movw	r22, r26
 3ca:	cf 01       	movw	r24, r30
 3cc:	08 95       	ret

000003ce <printf>:
 3ce:	a0 e0       	ldi	r26, 0x00	; 0
 3d0:	b0 e0       	ldi	r27, 0x00	; 0
 3d2:	ed ee       	ldi	r30, 0xED	; 237
 3d4:	f1 e0       	ldi	r31, 0x01	; 1
 3d6:	0c 94 ce 04 	jmp	0x99c	; 0x99c <__prologue_saves__+0x20>
 3da:	ae 01       	movw	r20, r28
 3dc:	4b 5f       	subi	r20, 0xFB	; 251
 3de:	5f 4f       	sbci	r21, 0xFF	; 255
 3e0:	fa 01       	movw	r30, r20
 3e2:	61 91       	ld	r22, Z+
 3e4:	71 91       	ld	r23, Z+
 3e6:	af 01       	movw	r20, r30
 3e8:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <__iob+0x2>
 3ec:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <__iob+0x3>
 3f0:	0e 94 2d 02 	call	0x45a	; 0x45a <vfprintf>
 3f4:	e2 e0       	ldi	r30, 0x02	; 2
 3f6:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__epilogue_restores__+0x20>

000003fa <puts>:
 3fa:	0f 93       	push	r16
 3fc:	1f 93       	push	r17
 3fe:	cf 93       	push	r28
 400:	df 93       	push	r29
 402:	e0 91 5c 01 	lds	r30, 0x015C	; 0x80015c <__iob+0x2>
 406:	f0 91 5d 01 	lds	r31, 0x015D	; 0x80015d <__iob+0x3>
 40a:	23 81       	ldd	r18, Z+3	; 0x03
 40c:	21 ff       	sbrs	r18, 1
 40e:	1b c0       	rjmp	.+54     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 410:	8c 01       	movw	r16, r24
 412:	d0 e0       	ldi	r29, 0x00	; 0
 414:	c0 e0       	ldi	r28, 0x00	; 0
 416:	f8 01       	movw	r30, r16
 418:	81 91       	ld	r24, Z+
 41a:	8f 01       	movw	r16, r30
 41c:	60 91 5c 01 	lds	r22, 0x015C	; 0x80015c <__iob+0x2>
 420:	70 91 5d 01 	lds	r23, 0x015D	; 0x80015d <__iob+0x3>
 424:	db 01       	movw	r26, r22
 426:	18 96       	adiw	r26, 0x08	; 8
 428:	ed 91       	ld	r30, X+
 42a:	fc 91       	ld	r31, X
 42c:	19 97       	sbiw	r26, 0x09	; 9
 42e:	88 23       	and	r24, r24
 430:	31 f0       	breq	.+12     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 432:	09 95       	icall
 434:	89 2b       	or	r24, r25
 436:	79 f3       	breq	.-34     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 438:	df ef       	ldi	r29, 0xFF	; 255
 43a:	cf ef       	ldi	r28, 0xFF	; 255
 43c:	ec cf       	rjmp	.-40     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 43e:	8a e0       	ldi	r24, 0x0A	; 10
 440:	09 95       	icall
 442:	89 2b       	or	r24, r25
 444:	19 f0       	breq	.+6      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 446:	8f ef       	ldi	r24, 0xFF	; 255
 448:	9f ef       	ldi	r25, 0xFF	; 255
 44a:	02 c0       	rjmp	.+4      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 44c:	8d 2f       	mov	r24, r29
 44e:	9c 2f       	mov	r25, r28
 450:	df 91       	pop	r29
 452:	cf 91       	pop	r28
 454:	1f 91       	pop	r17
 456:	0f 91       	pop	r16
 458:	08 95       	ret

0000045a <vfprintf>:
 45a:	ab e0       	ldi	r26, 0x0B	; 11
 45c:	b0 e0       	ldi	r27, 0x00	; 0
 45e:	e3 e3       	ldi	r30, 0x33	; 51
 460:	f2 e0       	ldi	r31, 0x02	; 2
 462:	0c 94 be 04 	jmp	0x97c	; 0x97c <__prologue_saves__>
 466:	6c 01       	movw	r12, r24
 468:	7b 01       	movw	r14, r22
 46a:	8a 01       	movw	r16, r20
 46c:	fc 01       	movw	r30, r24
 46e:	17 82       	std	Z+7, r1	; 0x07
 470:	16 82       	std	Z+6, r1	; 0x06
 472:	83 81       	ldd	r24, Z+3	; 0x03
 474:	81 ff       	sbrs	r24, 1
 476:	cc c1       	rjmp	.+920    	; 0x810 <vfprintf+0x3b6>
 478:	ce 01       	movw	r24, r28
 47a:	01 96       	adiw	r24, 0x01	; 1
 47c:	3c 01       	movw	r6, r24
 47e:	f6 01       	movw	r30, r12
 480:	93 81       	ldd	r25, Z+3	; 0x03
 482:	f7 01       	movw	r30, r14
 484:	93 fd       	sbrc	r25, 3
 486:	85 91       	lpm	r24, Z+
 488:	93 ff       	sbrs	r25, 3
 48a:	81 91       	ld	r24, Z+
 48c:	7f 01       	movw	r14, r30
 48e:	88 23       	and	r24, r24
 490:	09 f4       	brne	.+2      	; 0x494 <vfprintf+0x3a>
 492:	ba c1       	rjmp	.+884    	; 0x808 <vfprintf+0x3ae>
 494:	85 32       	cpi	r24, 0x25	; 37
 496:	39 f4       	brne	.+14     	; 0x4a6 <vfprintf+0x4c>
 498:	93 fd       	sbrc	r25, 3
 49a:	85 91       	lpm	r24, Z+
 49c:	93 ff       	sbrs	r25, 3
 49e:	81 91       	ld	r24, Z+
 4a0:	7f 01       	movw	r14, r30
 4a2:	85 32       	cpi	r24, 0x25	; 37
 4a4:	29 f4       	brne	.+10     	; 0x4b0 <vfprintf+0x56>
 4a6:	b6 01       	movw	r22, r12
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 4ae:	e7 cf       	rjmp	.-50     	; 0x47e <vfprintf+0x24>
 4b0:	91 2c       	mov	r9, r1
 4b2:	21 2c       	mov	r2, r1
 4b4:	31 2c       	mov	r3, r1
 4b6:	ff e1       	ldi	r31, 0x1F	; 31
 4b8:	f3 15       	cp	r31, r3
 4ba:	d8 f0       	brcs	.+54     	; 0x4f2 <vfprintf+0x98>
 4bc:	8b 32       	cpi	r24, 0x2B	; 43
 4be:	79 f0       	breq	.+30     	; 0x4de <vfprintf+0x84>
 4c0:	38 f4       	brcc	.+14     	; 0x4d0 <vfprintf+0x76>
 4c2:	80 32       	cpi	r24, 0x20	; 32
 4c4:	79 f0       	breq	.+30     	; 0x4e4 <vfprintf+0x8a>
 4c6:	83 32       	cpi	r24, 0x23	; 35
 4c8:	a1 f4       	brne	.+40     	; 0x4f2 <vfprintf+0x98>
 4ca:	23 2d       	mov	r18, r3
 4cc:	20 61       	ori	r18, 0x10	; 16
 4ce:	1d c0       	rjmp	.+58     	; 0x50a <vfprintf+0xb0>
 4d0:	8d 32       	cpi	r24, 0x2D	; 45
 4d2:	61 f0       	breq	.+24     	; 0x4ec <vfprintf+0x92>
 4d4:	80 33       	cpi	r24, 0x30	; 48
 4d6:	69 f4       	brne	.+26     	; 0x4f2 <vfprintf+0x98>
 4d8:	23 2d       	mov	r18, r3
 4da:	21 60       	ori	r18, 0x01	; 1
 4dc:	16 c0       	rjmp	.+44     	; 0x50a <vfprintf+0xb0>
 4de:	83 2d       	mov	r24, r3
 4e0:	82 60       	ori	r24, 0x02	; 2
 4e2:	38 2e       	mov	r3, r24
 4e4:	e3 2d       	mov	r30, r3
 4e6:	e4 60       	ori	r30, 0x04	; 4
 4e8:	3e 2e       	mov	r3, r30
 4ea:	2a c0       	rjmp	.+84     	; 0x540 <vfprintf+0xe6>
 4ec:	f3 2d       	mov	r31, r3
 4ee:	f8 60       	ori	r31, 0x08	; 8
 4f0:	1d c0       	rjmp	.+58     	; 0x52c <vfprintf+0xd2>
 4f2:	37 fc       	sbrc	r3, 7
 4f4:	2d c0       	rjmp	.+90     	; 0x550 <vfprintf+0xf6>
 4f6:	20 ed       	ldi	r18, 0xD0	; 208
 4f8:	28 0f       	add	r18, r24
 4fa:	2a 30       	cpi	r18, 0x0A	; 10
 4fc:	40 f0       	brcs	.+16     	; 0x50e <vfprintf+0xb4>
 4fe:	8e 32       	cpi	r24, 0x2E	; 46
 500:	b9 f4       	brne	.+46     	; 0x530 <vfprintf+0xd6>
 502:	36 fc       	sbrc	r3, 6
 504:	81 c1       	rjmp	.+770    	; 0x808 <vfprintf+0x3ae>
 506:	23 2d       	mov	r18, r3
 508:	20 64       	ori	r18, 0x40	; 64
 50a:	32 2e       	mov	r3, r18
 50c:	19 c0       	rjmp	.+50     	; 0x540 <vfprintf+0xe6>
 50e:	36 fe       	sbrs	r3, 6
 510:	06 c0       	rjmp	.+12     	; 0x51e <vfprintf+0xc4>
 512:	8a e0       	ldi	r24, 0x0A	; 10
 514:	98 9e       	mul	r9, r24
 516:	20 0d       	add	r18, r0
 518:	11 24       	eor	r1, r1
 51a:	92 2e       	mov	r9, r18
 51c:	11 c0       	rjmp	.+34     	; 0x540 <vfprintf+0xe6>
 51e:	ea e0       	ldi	r30, 0x0A	; 10
 520:	2e 9e       	mul	r2, r30
 522:	20 0d       	add	r18, r0
 524:	11 24       	eor	r1, r1
 526:	22 2e       	mov	r2, r18
 528:	f3 2d       	mov	r31, r3
 52a:	f0 62       	ori	r31, 0x20	; 32
 52c:	3f 2e       	mov	r3, r31
 52e:	08 c0       	rjmp	.+16     	; 0x540 <vfprintf+0xe6>
 530:	8c 36       	cpi	r24, 0x6C	; 108
 532:	21 f4       	brne	.+8      	; 0x53c <vfprintf+0xe2>
 534:	83 2d       	mov	r24, r3
 536:	80 68       	ori	r24, 0x80	; 128
 538:	38 2e       	mov	r3, r24
 53a:	02 c0       	rjmp	.+4      	; 0x540 <vfprintf+0xe6>
 53c:	88 36       	cpi	r24, 0x68	; 104
 53e:	41 f4       	brne	.+16     	; 0x550 <vfprintf+0xf6>
 540:	f7 01       	movw	r30, r14
 542:	93 fd       	sbrc	r25, 3
 544:	85 91       	lpm	r24, Z+
 546:	93 ff       	sbrs	r25, 3
 548:	81 91       	ld	r24, Z+
 54a:	7f 01       	movw	r14, r30
 54c:	81 11       	cpse	r24, r1
 54e:	b3 cf       	rjmp	.-154    	; 0x4b6 <vfprintf+0x5c>
 550:	98 2f       	mov	r25, r24
 552:	9f 7d       	andi	r25, 0xDF	; 223
 554:	95 54       	subi	r25, 0x45	; 69
 556:	93 30       	cpi	r25, 0x03	; 3
 558:	28 f4       	brcc	.+10     	; 0x564 <vfprintf+0x10a>
 55a:	0c 5f       	subi	r16, 0xFC	; 252
 55c:	1f 4f       	sbci	r17, 0xFF	; 255
 55e:	9f e3       	ldi	r25, 0x3F	; 63
 560:	99 83       	std	Y+1, r25	; 0x01
 562:	0d c0       	rjmp	.+26     	; 0x57e <vfprintf+0x124>
 564:	83 36       	cpi	r24, 0x63	; 99
 566:	31 f0       	breq	.+12     	; 0x574 <vfprintf+0x11a>
 568:	83 37       	cpi	r24, 0x73	; 115
 56a:	71 f0       	breq	.+28     	; 0x588 <vfprintf+0x12e>
 56c:	83 35       	cpi	r24, 0x53	; 83
 56e:	09 f0       	breq	.+2      	; 0x572 <vfprintf+0x118>
 570:	59 c0       	rjmp	.+178    	; 0x624 <vfprintf+0x1ca>
 572:	21 c0       	rjmp	.+66     	; 0x5b6 <vfprintf+0x15c>
 574:	f8 01       	movw	r30, r16
 576:	80 81       	ld	r24, Z
 578:	89 83       	std	Y+1, r24	; 0x01
 57a:	0e 5f       	subi	r16, 0xFE	; 254
 57c:	1f 4f       	sbci	r17, 0xFF	; 255
 57e:	88 24       	eor	r8, r8
 580:	83 94       	inc	r8
 582:	91 2c       	mov	r9, r1
 584:	53 01       	movw	r10, r6
 586:	13 c0       	rjmp	.+38     	; 0x5ae <vfprintf+0x154>
 588:	28 01       	movw	r4, r16
 58a:	f2 e0       	ldi	r31, 0x02	; 2
 58c:	4f 0e       	add	r4, r31
 58e:	51 1c       	adc	r5, r1
 590:	f8 01       	movw	r30, r16
 592:	a0 80       	ld	r10, Z
 594:	b1 80       	ldd	r11, Z+1	; 0x01
 596:	36 fe       	sbrs	r3, 6
 598:	03 c0       	rjmp	.+6      	; 0x5a0 <vfprintf+0x146>
 59a:	69 2d       	mov	r22, r9
 59c:	70 e0       	ldi	r23, 0x00	; 0
 59e:	02 c0       	rjmp	.+4      	; 0x5a4 <vfprintf+0x14a>
 5a0:	6f ef       	ldi	r22, 0xFF	; 255
 5a2:	7f ef       	ldi	r23, 0xFF	; 255
 5a4:	c5 01       	movw	r24, r10
 5a6:	0e 94 19 04 	call	0x832	; 0x832 <strnlen>
 5aa:	4c 01       	movw	r8, r24
 5ac:	82 01       	movw	r16, r4
 5ae:	f3 2d       	mov	r31, r3
 5b0:	ff 77       	andi	r31, 0x7F	; 127
 5b2:	3f 2e       	mov	r3, r31
 5b4:	16 c0       	rjmp	.+44     	; 0x5e2 <vfprintf+0x188>
 5b6:	28 01       	movw	r4, r16
 5b8:	22 e0       	ldi	r18, 0x02	; 2
 5ba:	42 0e       	add	r4, r18
 5bc:	51 1c       	adc	r5, r1
 5be:	f8 01       	movw	r30, r16
 5c0:	a0 80       	ld	r10, Z
 5c2:	b1 80       	ldd	r11, Z+1	; 0x01
 5c4:	36 fe       	sbrs	r3, 6
 5c6:	03 c0       	rjmp	.+6      	; 0x5ce <vfprintf+0x174>
 5c8:	69 2d       	mov	r22, r9
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <vfprintf+0x178>
 5ce:	6f ef       	ldi	r22, 0xFF	; 255
 5d0:	7f ef       	ldi	r23, 0xFF	; 255
 5d2:	c5 01       	movw	r24, r10
 5d4:	0e 94 0e 04 	call	0x81c	; 0x81c <strnlen_P>
 5d8:	4c 01       	movw	r8, r24
 5da:	f3 2d       	mov	r31, r3
 5dc:	f0 68       	ori	r31, 0x80	; 128
 5de:	3f 2e       	mov	r3, r31
 5e0:	82 01       	movw	r16, r4
 5e2:	33 fc       	sbrc	r3, 3
 5e4:	1b c0       	rjmp	.+54     	; 0x61c <vfprintf+0x1c2>
 5e6:	82 2d       	mov	r24, r2
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	88 16       	cp	r8, r24
 5ec:	99 06       	cpc	r9, r25
 5ee:	b0 f4       	brcc	.+44     	; 0x61c <vfprintf+0x1c2>
 5f0:	b6 01       	movw	r22, r12
 5f2:	80 e2       	ldi	r24, 0x20	; 32
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 5fa:	2a 94       	dec	r2
 5fc:	f4 cf       	rjmp	.-24     	; 0x5e6 <vfprintf+0x18c>
 5fe:	f5 01       	movw	r30, r10
 600:	37 fc       	sbrc	r3, 7
 602:	85 91       	lpm	r24, Z+
 604:	37 fe       	sbrs	r3, 7
 606:	81 91       	ld	r24, Z+
 608:	5f 01       	movw	r10, r30
 60a:	b6 01       	movw	r22, r12
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 612:	21 10       	cpse	r2, r1
 614:	2a 94       	dec	r2
 616:	21 e0       	ldi	r18, 0x01	; 1
 618:	82 1a       	sub	r8, r18
 61a:	91 08       	sbc	r9, r1
 61c:	81 14       	cp	r8, r1
 61e:	91 04       	cpc	r9, r1
 620:	71 f7       	brne	.-36     	; 0x5fe <vfprintf+0x1a4>
 622:	e8 c0       	rjmp	.+464    	; 0x7f4 <vfprintf+0x39a>
 624:	84 36       	cpi	r24, 0x64	; 100
 626:	11 f0       	breq	.+4      	; 0x62c <vfprintf+0x1d2>
 628:	89 36       	cpi	r24, 0x69	; 105
 62a:	41 f5       	brne	.+80     	; 0x67c <vfprintf+0x222>
 62c:	f8 01       	movw	r30, r16
 62e:	37 fe       	sbrs	r3, 7
 630:	07 c0       	rjmp	.+14     	; 0x640 <vfprintf+0x1e6>
 632:	60 81       	ld	r22, Z
 634:	71 81       	ldd	r23, Z+1	; 0x01
 636:	82 81       	ldd	r24, Z+2	; 0x02
 638:	93 81       	ldd	r25, Z+3	; 0x03
 63a:	0c 5f       	subi	r16, 0xFC	; 252
 63c:	1f 4f       	sbci	r17, 0xFF	; 255
 63e:	08 c0       	rjmp	.+16     	; 0x650 <vfprintf+0x1f6>
 640:	60 81       	ld	r22, Z
 642:	71 81       	ldd	r23, Z+1	; 0x01
 644:	07 2e       	mov	r0, r23
 646:	00 0c       	add	r0, r0
 648:	88 0b       	sbc	r24, r24
 64a:	99 0b       	sbc	r25, r25
 64c:	0e 5f       	subi	r16, 0xFE	; 254
 64e:	1f 4f       	sbci	r17, 0xFF	; 255
 650:	f3 2d       	mov	r31, r3
 652:	ff 76       	andi	r31, 0x6F	; 111
 654:	3f 2e       	mov	r3, r31
 656:	97 ff       	sbrs	r25, 7
 658:	09 c0       	rjmp	.+18     	; 0x66c <vfprintf+0x212>
 65a:	90 95       	com	r25
 65c:	80 95       	com	r24
 65e:	70 95       	com	r23
 660:	61 95       	neg	r22
 662:	7f 4f       	sbci	r23, 0xFF	; 255
 664:	8f 4f       	sbci	r24, 0xFF	; 255
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	f0 68       	ori	r31, 0x80	; 128
 66a:	3f 2e       	mov	r3, r31
 66c:	2a e0       	ldi	r18, 0x0A	; 10
 66e:	30 e0       	ldi	r19, 0x00	; 0
 670:	a3 01       	movw	r20, r6
 672:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__ultoa_invert>
 676:	88 2e       	mov	r8, r24
 678:	86 18       	sub	r8, r6
 67a:	45 c0       	rjmp	.+138    	; 0x706 <vfprintf+0x2ac>
 67c:	85 37       	cpi	r24, 0x75	; 117
 67e:	31 f4       	brne	.+12     	; 0x68c <vfprintf+0x232>
 680:	23 2d       	mov	r18, r3
 682:	2f 7e       	andi	r18, 0xEF	; 239
 684:	b2 2e       	mov	r11, r18
 686:	2a e0       	ldi	r18, 0x0A	; 10
 688:	30 e0       	ldi	r19, 0x00	; 0
 68a:	25 c0       	rjmp	.+74     	; 0x6d6 <vfprintf+0x27c>
 68c:	93 2d       	mov	r25, r3
 68e:	99 7f       	andi	r25, 0xF9	; 249
 690:	b9 2e       	mov	r11, r25
 692:	8f 36       	cpi	r24, 0x6F	; 111
 694:	c1 f0       	breq	.+48     	; 0x6c6 <vfprintf+0x26c>
 696:	18 f4       	brcc	.+6      	; 0x69e <vfprintf+0x244>
 698:	88 35       	cpi	r24, 0x58	; 88
 69a:	79 f0       	breq	.+30     	; 0x6ba <vfprintf+0x260>
 69c:	b5 c0       	rjmp	.+362    	; 0x808 <vfprintf+0x3ae>
 69e:	80 37       	cpi	r24, 0x70	; 112
 6a0:	19 f0       	breq	.+6      	; 0x6a8 <vfprintf+0x24e>
 6a2:	88 37       	cpi	r24, 0x78	; 120
 6a4:	21 f0       	breq	.+8      	; 0x6ae <vfprintf+0x254>
 6a6:	b0 c0       	rjmp	.+352    	; 0x808 <vfprintf+0x3ae>
 6a8:	e9 2f       	mov	r30, r25
 6aa:	e0 61       	ori	r30, 0x10	; 16
 6ac:	be 2e       	mov	r11, r30
 6ae:	b4 fe       	sbrs	r11, 4
 6b0:	0d c0       	rjmp	.+26     	; 0x6cc <vfprintf+0x272>
 6b2:	fb 2d       	mov	r31, r11
 6b4:	f4 60       	ori	r31, 0x04	; 4
 6b6:	bf 2e       	mov	r11, r31
 6b8:	09 c0       	rjmp	.+18     	; 0x6cc <vfprintf+0x272>
 6ba:	34 fe       	sbrs	r3, 4
 6bc:	0a c0       	rjmp	.+20     	; 0x6d2 <vfprintf+0x278>
 6be:	29 2f       	mov	r18, r25
 6c0:	26 60       	ori	r18, 0x06	; 6
 6c2:	b2 2e       	mov	r11, r18
 6c4:	06 c0       	rjmp	.+12     	; 0x6d2 <vfprintf+0x278>
 6c6:	28 e0       	ldi	r18, 0x08	; 8
 6c8:	30 e0       	ldi	r19, 0x00	; 0
 6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <vfprintf+0x27c>
 6cc:	20 e1       	ldi	r18, 0x10	; 16
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <vfprintf+0x27c>
 6d2:	20 e1       	ldi	r18, 0x10	; 16
 6d4:	32 e0       	ldi	r19, 0x02	; 2
 6d6:	f8 01       	movw	r30, r16
 6d8:	b7 fe       	sbrs	r11, 7
 6da:	07 c0       	rjmp	.+14     	; 0x6ea <vfprintf+0x290>
 6dc:	60 81       	ld	r22, Z
 6de:	71 81       	ldd	r23, Z+1	; 0x01
 6e0:	82 81       	ldd	r24, Z+2	; 0x02
 6e2:	93 81       	ldd	r25, Z+3	; 0x03
 6e4:	0c 5f       	subi	r16, 0xFC	; 252
 6e6:	1f 4f       	sbci	r17, 0xFF	; 255
 6e8:	06 c0       	rjmp	.+12     	; 0x6f6 <vfprintf+0x29c>
 6ea:	60 81       	ld	r22, Z
 6ec:	71 81       	ldd	r23, Z+1	; 0x01
 6ee:	80 e0       	ldi	r24, 0x00	; 0
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	0e 5f       	subi	r16, 0xFE	; 254
 6f4:	1f 4f       	sbci	r17, 0xFF	; 255
 6f6:	a3 01       	movw	r20, r6
 6f8:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__ultoa_invert>
 6fc:	88 2e       	mov	r8, r24
 6fe:	86 18       	sub	r8, r6
 700:	fb 2d       	mov	r31, r11
 702:	ff 77       	andi	r31, 0x7F	; 127
 704:	3f 2e       	mov	r3, r31
 706:	36 fe       	sbrs	r3, 6
 708:	0d c0       	rjmp	.+26     	; 0x724 <vfprintf+0x2ca>
 70a:	23 2d       	mov	r18, r3
 70c:	2e 7f       	andi	r18, 0xFE	; 254
 70e:	a2 2e       	mov	r10, r18
 710:	89 14       	cp	r8, r9
 712:	58 f4       	brcc	.+22     	; 0x72a <vfprintf+0x2d0>
 714:	34 fe       	sbrs	r3, 4
 716:	0b c0       	rjmp	.+22     	; 0x72e <vfprintf+0x2d4>
 718:	32 fc       	sbrc	r3, 2
 71a:	09 c0       	rjmp	.+18     	; 0x72e <vfprintf+0x2d4>
 71c:	83 2d       	mov	r24, r3
 71e:	8e 7e       	andi	r24, 0xEE	; 238
 720:	a8 2e       	mov	r10, r24
 722:	05 c0       	rjmp	.+10     	; 0x72e <vfprintf+0x2d4>
 724:	b8 2c       	mov	r11, r8
 726:	a3 2c       	mov	r10, r3
 728:	03 c0       	rjmp	.+6      	; 0x730 <vfprintf+0x2d6>
 72a:	b8 2c       	mov	r11, r8
 72c:	01 c0       	rjmp	.+2      	; 0x730 <vfprintf+0x2d6>
 72e:	b9 2c       	mov	r11, r9
 730:	a4 fe       	sbrs	r10, 4
 732:	0f c0       	rjmp	.+30     	; 0x752 <vfprintf+0x2f8>
 734:	fe 01       	movw	r30, r28
 736:	e8 0d       	add	r30, r8
 738:	f1 1d       	adc	r31, r1
 73a:	80 81       	ld	r24, Z
 73c:	80 33       	cpi	r24, 0x30	; 48
 73e:	21 f4       	brne	.+8      	; 0x748 <vfprintf+0x2ee>
 740:	9a 2d       	mov	r25, r10
 742:	99 7e       	andi	r25, 0xE9	; 233
 744:	a9 2e       	mov	r10, r25
 746:	09 c0       	rjmp	.+18     	; 0x75a <vfprintf+0x300>
 748:	a2 fe       	sbrs	r10, 2
 74a:	06 c0       	rjmp	.+12     	; 0x758 <vfprintf+0x2fe>
 74c:	b3 94       	inc	r11
 74e:	b3 94       	inc	r11
 750:	04 c0       	rjmp	.+8      	; 0x75a <vfprintf+0x300>
 752:	8a 2d       	mov	r24, r10
 754:	86 78       	andi	r24, 0x86	; 134
 756:	09 f0       	breq	.+2      	; 0x75a <vfprintf+0x300>
 758:	b3 94       	inc	r11
 75a:	a3 fc       	sbrc	r10, 3
 75c:	11 c0       	rjmp	.+34     	; 0x780 <vfprintf+0x326>
 75e:	a0 fe       	sbrs	r10, 0
 760:	06 c0       	rjmp	.+12     	; 0x76e <vfprintf+0x314>
 762:	b2 14       	cp	r11, r2
 764:	88 f4       	brcc	.+34     	; 0x788 <vfprintf+0x32e>
 766:	28 0c       	add	r2, r8
 768:	92 2c       	mov	r9, r2
 76a:	9b 18       	sub	r9, r11
 76c:	0e c0       	rjmp	.+28     	; 0x78a <vfprintf+0x330>
 76e:	b2 14       	cp	r11, r2
 770:	60 f4       	brcc	.+24     	; 0x78a <vfprintf+0x330>
 772:	b6 01       	movw	r22, r12
 774:	80 e2       	ldi	r24, 0x20	; 32
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 77c:	b3 94       	inc	r11
 77e:	f7 cf       	rjmp	.-18     	; 0x76e <vfprintf+0x314>
 780:	b2 14       	cp	r11, r2
 782:	18 f4       	brcc	.+6      	; 0x78a <vfprintf+0x330>
 784:	2b 18       	sub	r2, r11
 786:	02 c0       	rjmp	.+4      	; 0x78c <vfprintf+0x332>
 788:	98 2c       	mov	r9, r8
 78a:	21 2c       	mov	r2, r1
 78c:	a4 fe       	sbrs	r10, 4
 78e:	10 c0       	rjmp	.+32     	; 0x7b0 <vfprintf+0x356>
 790:	b6 01       	movw	r22, r12
 792:	80 e3       	ldi	r24, 0x30	; 48
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 79a:	a2 fe       	sbrs	r10, 2
 79c:	17 c0       	rjmp	.+46     	; 0x7cc <vfprintf+0x372>
 79e:	a1 fc       	sbrc	r10, 1
 7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <vfprintf+0x34e>
 7a2:	88 e7       	ldi	r24, 0x78	; 120
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <vfprintf+0x352>
 7a8:	88 e5       	ldi	r24, 0x58	; 88
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	b6 01       	movw	r22, r12
 7ae:	0c c0       	rjmp	.+24     	; 0x7c8 <vfprintf+0x36e>
 7b0:	8a 2d       	mov	r24, r10
 7b2:	86 78       	andi	r24, 0x86	; 134
 7b4:	59 f0       	breq	.+22     	; 0x7cc <vfprintf+0x372>
 7b6:	a1 fe       	sbrs	r10, 1
 7b8:	02 c0       	rjmp	.+4      	; 0x7be <vfprintf+0x364>
 7ba:	8b e2       	ldi	r24, 0x2B	; 43
 7bc:	01 c0       	rjmp	.+2      	; 0x7c0 <vfprintf+0x366>
 7be:	80 e2       	ldi	r24, 0x20	; 32
 7c0:	a7 fc       	sbrc	r10, 7
 7c2:	8d e2       	ldi	r24, 0x2D	; 45
 7c4:	b6 01       	movw	r22, r12
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 7cc:	89 14       	cp	r8, r9
 7ce:	38 f4       	brcc	.+14     	; 0x7de <vfprintf+0x384>
 7d0:	b6 01       	movw	r22, r12
 7d2:	80 e3       	ldi	r24, 0x30	; 48
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 7da:	9a 94       	dec	r9
 7dc:	f7 cf       	rjmp	.-18     	; 0x7cc <vfprintf+0x372>
 7de:	8a 94       	dec	r8
 7e0:	f3 01       	movw	r30, r6
 7e2:	e8 0d       	add	r30, r8
 7e4:	f1 1d       	adc	r31, r1
 7e6:	80 81       	ld	r24, Z
 7e8:	b6 01       	movw	r22, r12
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 7f0:	81 10       	cpse	r8, r1
 7f2:	f5 cf       	rjmp	.-22     	; 0x7de <vfprintf+0x384>
 7f4:	22 20       	and	r2, r2
 7f6:	09 f4       	brne	.+2      	; 0x7fa <vfprintf+0x3a0>
 7f8:	42 ce       	rjmp	.-892    	; 0x47e <vfprintf+0x24>
 7fa:	b6 01       	movw	r22, r12
 7fc:	80 e2       	ldi	r24, 0x20	; 32
 7fe:	90 e0       	ldi	r25, 0x00	; 0
 800:	0e 94 24 04 	call	0x848	; 0x848 <fputc>
 804:	2a 94       	dec	r2
 806:	f6 cf       	rjmp	.-20     	; 0x7f4 <vfprintf+0x39a>
 808:	f6 01       	movw	r30, r12
 80a:	86 81       	ldd	r24, Z+6	; 0x06
 80c:	97 81       	ldd	r25, Z+7	; 0x07
 80e:	02 c0       	rjmp	.+4      	; 0x814 <vfprintf+0x3ba>
 810:	8f ef       	ldi	r24, 0xFF	; 255
 812:	9f ef       	ldi	r25, 0xFF	; 255
 814:	2b 96       	adiw	r28, 0x0b	; 11
 816:	e2 e1       	ldi	r30, 0x12	; 18
 818:	0c 94 da 04 	jmp	0x9b4	; 0x9b4 <__epilogue_restores__>

0000081c <strnlen_P>:
 81c:	fc 01       	movw	r30, r24
 81e:	05 90       	lpm	r0, Z+
 820:	61 50       	subi	r22, 0x01	; 1
 822:	70 40       	sbci	r23, 0x00	; 0
 824:	01 10       	cpse	r0, r1
 826:	d8 f7       	brcc	.-10     	; 0x81e <strnlen_P+0x2>
 828:	80 95       	com	r24
 82a:	90 95       	com	r25
 82c:	8e 0f       	add	r24, r30
 82e:	9f 1f       	adc	r25, r31
 830:	08 95       	ret

00000832 <strnlen>:
 832:	fc 01       	movw	r30, r24
 834:	61 50       	subi	r22, 0x01	; 1
 836:	70 40       	sbci	r23, 0x00	; 0
 838:	01 90       	ld	r0, Z+
 83a:	01 10       	cpse	r0, r1
 83c:	d8 f7       	brcc	.-10     	; 0x834 <strnlen+0x2>
 83e:	80 95       	com	r24
 840:	90 95       	com	r25
 842:	8e 0f       	add	r24, r30
 844:	9f 1f       	adc	r25, r31
 846:	08 95       	ret

00000848 <fputc>:
 848:	0f 93       	push	r16
 84a:	1f 93       	push	r17
 84c:	cf 93       	push	r28
 84e:	df 93       	push	r29
 850:	fb 01       	movw	r30, r22
 852:	23 81       	ldd	r18, Z+3	; 0x03
 854:	21 fd       	sbrc	r18, 1
 856:	03 c0       	rjmp	.+6      	; 0x85e <fputc+0x16>
 858:	8f ef       	ldi	r24, 0xFF	; 255
 85a:	9f ef       	ldi	r25, 0xFF	; 255
 85c:	2c c0       	rjmp	.+88     	; 0x8b6 <fputc+0x6e>
 85e:	22 ff       	sbrs	r18, 2
 860:	16 c0       	rjmp	.+44     	; 0x88e <fputc+0x46>
 862:	46 81       	ldd	r20, Z+6	; 0x06
 864:	57 81       	ldd	r21, Z+7	; 0x07
 866:	24 81       	ldd	r18, Z+4	; 0x04
 868:	35 81       	ldd	r19, Z+5	; 0x05
 86a:	42 17       	cp	r20, r18
 86c:	53 07       	cpc	r21, r19
 86e:	44 f4       	brge	.+16     	; 0x880 <fputc+0x38>
 870:	a0 81       	ld	r26, Z
 872:	b1 81       	ldd	r27, Z+1	; 0x01
 874:	9d 01       	movw	r18, r26
 876:	2f 5f       	subi	r18, 0xFF	; 255
 878:	3f 4f       	sbci	r19, 0xFF	; 255
 87a:	31 83       	std	Z+1, r19	; 0x01
 87c:	20 83       	st	Z, r18
 87e:	8c 93       	st	X, r24
 880:	26 81       	ldd	r18, Z+6	; 0x06
 882:	37 81       	ldd	r19, Z+7	; 0x07
 884:	2f 5f       	subi	r18, 0xFF	; 255
 886:	3f 4f       	sbci	r19, 0xFF	; 255
 888:	37 83       	std	Z+7, r19	; 0x07
 88a:	26 83       	std	Z+6, r18	; 0x06
 88c:	14 c0       	rjmp	.+40     	; 0x8b6 <fputc+0x6e>
 88e:	8b 01       	movw	r16, r22
 890:	ec 01       	movw	r28, r24
 892:	fb 01       	movw	r30, r22
 894:	00 84       	ldd	r0, Z+8	; 0x08
 896:	f1 85       	ldd	r31, Z+9	; 0x09
 898:	e0 2d       	mov	r30, r0
 89a:	09 95       	icall
 89c:	89 2b       	or	r24, r25
 89e:	e1 f6       	brne	.-72     	; 0x858 <fputc+0x10>
 8a0:	d8 01       	movw	r26, r16
 8a2:	16 96       	adiw	r26, 0x06	; 6
 8a4:	8d 91       	ld	r24, X+
 8a6:	9c 91       	ld	r25, X
 8a8:	17 97       	sbiw	r26, 0x07	; 7
 8aa:	01 96       	adiw	r24, 0x01	; 1
 8ac:	17 96       	adiw	r26, 0x07	; 7
 8ae:	9c 93       	st	X, r25
 8b0:	8e 93       	st	-X, r24
 8b2:	16 97       	sbiw	r26, 0x06	; 6
 8b4:	ce 01       	movw	r24, r28
 8b6:	df 91       	pop	r29
 8b8:	cf 91       	pop	r28
 8ba:	1f 91       	pop	r17
 8bc:	0f 91       	pop	r16
 8be:	08 95       	ret

000008c0 <__ultoa_invert>:
 8c0:	fa 01       	movw	r30, r20
 8c2:	aa 27       	eor	r26, r26
 8c4:	28 30       	cpi	r18, 0x08	; 8
 8c6:	51 f1       	breq	.+84     	; 0x91c <__stack+0x1d>
 8c8:	20 31       	cpi	r18, 0x10	; 16
 8ca:	81 f1       	breq	.+96     	; 0x92c <__stack+0x2d>
 8cc:	e8 94       	clt
 8ce:	6f 93       	push	r22
 8d0:	6e 7f       	andi	r22, 0xFE	; 254
 8d2:	6e 5f       	subi	r22, 0xFE	; 254
 8d4:	7f 4f       	sbci	r23, 0xFF	; 255
 8d6:	8f 4f       	sbci	r24, 0xFF	; 255
 8d8:	9f 4f       	sbci	r25, 0xFF	; 255
 8da:	af 4f       	sbci	r26, 0xFF	; 255
 8dc:	b1 e0       	ldi	r27, 0x01	; 1
 8de:	3e d0       	rcall	.+124    	; 0x95c <__stack+0x5d>
 8e0:	b4 e0       	ldi	r27, 0x04	; 4
 8e2:	3c d0       	rcall	.+120    	; 0x95c <__stack+0x5d>
 8e4:	67 0f       	add	r22, r23
 8e6:	78 1f       	adc	r23, r24
 8e8:	89 1f       	adc	r24, r25
 8ea:	9a 1f       	adc	r25, r26
 8ec:	a1 1d       	adc	r26, r1
 8ee:	68 0f       	add	r22, r24
 8f0:	79 1f       	adc	r23, r25
 8f2:	8a 1f       	adc	r24, r26
 8f4:	91 1d       	adc	r25, r1
 8f6:	a1 1d       	adc	r26, r1
 8f8:	6a 0f       	add	r22, r26
 8fa:	71 1d       	adc	r23, r1
 8fc:	81 1d       	adc	r24, r1
 8fe:	91 1d       	adc	r25, r1
 900:	a1 1d       	adc	r26, r1
 902:	20 d0       	rcall	.+64     	; 0x944 <__stack+0x45>
 904:	09 f4       	brne	.+2      	; 0x908 <__stack+0x9>
 906:	68 94       	set
 908:	3f 91       	pop	r19
 90a:	2a e0       	ldi	r18, 0x0A	; 10
 90c:	26 9f       	mul	r18, r22
 90e:	11 24       	eor	r1, r1
 910:	30 19       	sub	r19, r0
 912:	30 5d       	subi	r19, 0xD0	; 208
 914:	31 93       	st	Z+, r19
 916:	de f6       	brtc	.-74     	; 0x8ce <__ultoa_invert+0xe>
 918:	cf 01       	movw	r24, r30
 91a:	08 95       	ret
 91c:	46 2f       	mov	r20, r22
 91e:	47 70       	andi	r20, 0x07	; 7
 920:	40 5d       	subi	r20, 0xD0	; 208
 922:	41 93       	st	Z+, r20
 924:	b3 e0       	ldi	r27, 0x03	; 3
 926:	0f d0       	rcall	.+30     	; 0x946 <__stack+0x47>
 928:	c9 f7       	brne	.-14     	; 0x91c <__stack+0x1d>
 92a:	f6 cf       	rjmp	.-20     	; 0x918 <__stack+0x19>
 92c:	46 2f       	mov	r20, r22
 92e:	4f 70       	andi	r20, 0x0F	; 15
 930:	40 5d       	subi	r20, 0xD0	; 208
 932:	4a 33       	cpi	r20, 0x3A	; 58
 934:	18 f0       	brcs	.+6      	; 0x93c <__stack+0x3d>
 936:	49 5d       	subi	r20, 0xD9	; 217
 938:	31 fd       	sbrc	r19, 1
 93a:	40 52       	subi	r20, 0x20	; 32
 93c:	41 93       	st	Z+, r20
 93e:	02 d0       	rcall	.+4      	; 0x944 <__stack+0x45>
 940:	a9 f7       	brne	.-22     	; 0x92c <__stack+0x2d>
 942:	ea cf       	rjmp	.-44     	; 0x918 <__stack+0x19>
 944:	b4 e0       	ldi	r27, 0x04	; 4
 946:	a6 95       	lsr	r26
 948:	97 95       	ror	r25
 94a:	87 95       	ror	r24
 94c:	77 95       	ror	r23
 94e:	67 95       	ror	r22
 950:	ba 95       	dec	r27
 952:	c9 f7       	brne	.-14     	; 0x946 <__stack+0x47>
 954:	00 97       	sbiw	r24, 0x00	; 0
 956:	61 05       	cpc	r22, r1
 958:	71 05       	cpc	r23, r1
 95a:	08 95       	ret
 95c:	9b 01       	movw	r18, r22
 95e:	ac 01       	movw	r20, r24
 960:	0a 2e       	mov	r0, r26
 962:	06 94       	lsr	r0
 964:	57 95       	ror	r21
 966:	47 95       	ror	r20
 968:	37 95       	ror	r19
 96a:	27 95       	ror	r18
 96c:	ba 95       	dec	r27
 96e:	c9 f7       	brne	.-14     	; 0x962 <__stack+0x63>
 970:	62 0f       	add	r22, r18
 972:	73 1f       	adc	r23, r19
 974:	84 1f       	adc	r24, r20
 976:	95 1f       	adc	r25, r21
 978:	a0 1d       	adc	r26, r0
 97a:	08 95       	ret

0000097c <__prologue_saves__>:
 97c:	2f 92       	push	r2
 97e:	3f 92       	push	r3
 980:	4f 92       	push	r4
 982:	5f 92       	push	r5
 984:	6f 92       	push	r6
 986:	7f 92       	push	r7
 988:	8f 92       	push	r8
 98a:	9f 92       	push	r9
 98c:	af 92       	push	r10
 98e:	bf 92       	push	r11
 990:	cf 92       	push	r12
 992:	df 92       	push	r13
 994:	ef 92       	push	r14
 996:	ff 92       	push	r15
 998:	0f 93       	push	r16
 99a:	1f 93       	push	r17
 99c:	cf 93       	push	r28
 99e:	df 93       	push	r29
 9a0:	cd b7       	in	r28, 0x3d	; 61
 9a2:	de b7       	in	r29, 0x3e	; 62
 9a4:	ca 1b       	sub	r28, r26
 9a6:	db 0b       	sbc	r29, r27
 9a8:	0f b6       	in	r0, 0x3f	; 63
 9aa:	f8 94       	cli
 9ac:	de bf       	out	0x3e, r29	; 62
 9ae:	0f be       	out	0x3f, r0	; 63
 9b0:	cd bf       	out	0x3d, r28	; 61
 9b2:	09 94       	ijmp

000009b4 <__epilogue_restores__>:
 9b4:	2a 88       	ldd	r2, Y+18	; 0x12
 9b6:	39 88       	ldd	r3, Y+17	; 0x11
 9b8:	48 88       	ldd	r4, Y+16	; 0x10
 9ba:	5f 84       	ldd	r5, Y+15	; 0x0f
 9bc:	6e 84       	ldd	r6, Y+14	; 0x0e
 9be:	7d 84       	ldd	r7, Y+13	; 0x0d
 9c0:	8c 84       	ldd	r8, Y+12	; 0x0c
 9c2:	9b 84       	ldd	r9, Y+11	; 0x0b
 9c4:	aa 84       	ldd	r10, Y+10	; 0x0a
 9c6:	b9 84       	ldd	r11, Y+9	; 0x09
 9c8:	c8 84       	ldd	r12, Y+8	; 0x08
 9ca:	df 80       	ldd	r13, Y+7	; 0x07
 9cc:	ee 80       	ldd	r14, Y+6	; 0x06
 9ce:	fd 80       	ldd	r15, Y+5	; 0x05
 9d0:	0c 81       	ldd	r16, Y+4	; 0x04
 9d2:	1b 81       	ldd	r17, Y+3	; 0x03
 9d4:	aa 81       	ldd	r26, Y+2	; 0x02
 9d6:	b9 81       	ldd	r27, Y+1	; 0x01
 9d8:	ce 0f       	add	r28, r30
 9da:	d1 1d       	adc	r29, r1
 9dc:	0f b6       	in	r0, 0x3f	; 63
 9de:	f8 94       	cli
 9e0:	de bf       	out	0x3e, r29	; 62
 9e2:	0f be       	out	0x3f, r0	; 63
 9e4:	cd bf       	out	0x3d, r28	; 61
 9e6:	ed 01       	movw	r28, r26
 9e8:	08 95       	ret

000009ea <_exit>:
 9ea:	f8 94       	cli

000009ec <__stop_program>:
 9ec:	ff cf       	rjmp	.-2      	; 0x9ec <__stop_program>
